name: Docker
on:
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string
        default: "0.0.1"
      ruby_version:
        required: true
        type: string
      bundler_version:
        required: true
        type: string
      pg_cli_version:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      image_suffix:
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker build for current rails version
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-dev-${{ inputs.ruby_version }}
          restore-keys: |
            ${{ runner.os }}-buildx-dev-${{ inputs.ruby_version }}-${{ inputs.dockerfile }}
            ${{ runner.os }}-buildx-dev
      - name: Log in to github registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          file: ${{ inputs.dockerfile }} 
          pull: true
          push: true
          tags: |
            ghcr.io/so-gineers/workbook-api:${{ inputs.release_version }}-${{ inputs.image_suffix }}-${{ inputs.ruby_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            RUBY_VERSION=${{ inputs.ruby_version }}
            BUNDLER_VERSION=${{ inputs.bundler_version }}
            PG_CLI_VERSION=${{ inputs.pg_cli_version }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/so-gineers/workbook-api:${{ inputs.release_version }}-${{ inputs.image_suffix }}-${{ inputs.ruby_version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
